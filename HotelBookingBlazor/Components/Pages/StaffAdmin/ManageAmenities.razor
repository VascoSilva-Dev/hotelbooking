@page "/staff-admin/manage-amenities"
@using HotelBookingBlazor.Data.Entites

@attribute [Authorize(Roles = "Staff,Admin")]

@attribute [StreamRendering]

@inject NavigationManager NavigationManager

@inject IAmenitiesService AmenitiesService

<div class="container">

    <h1>Manage Amenities</h1>
    <hr />

    <div class="row">
        <div class="col-sm-3">
            <EditForm Model="Model" Enhance=true FormName="amenity" OnValidSubmit="SaveAmenityAsync">
                <DataAnnotationsValidator />
                @if (!string.IsNullOrWhiteSpace(_error))
                {
                    <div class="mb-3 text-danger">
                        <small>@_error</small>
                    </div>
                }
                <div class="mn-3">
                    <label class="form-label">Name: </label>
                    <InputText @bind-Value="Model.Name" class="form-control" placeholder="Amenity name" />
                    <ValidationMessage For="()=> Model.Name" class="text-danger" />
                </div>
                <div class="mn-3">
                    <label class="form-label">Icon: </label>
                    <InputText @bind-Value="Model.Icon" class="form-control" placeholder="Amenity icon" />
                    <ValidationMessage For="()=> Model.Icon" class="text-danger" />
                </div>
                <div class="mb-3">
                    <button type="submit" class="btn btn-sm btn-success" disabled="@_isSaving">

                        @if (_isSaving)
                        {
                            <span class="spinner-border spinner-border-sm" aria-hidden="true"></span>
                            <span role="status">Saving...</span>
                        }
                        else
                        {
                            <span>Save</span>
                        }

                    </button>
                </div>
            </EditForm>
        </div>
        <div class="col-sm-9">
            <table class="table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Icon</th>
                        <th>Name</th>
                        <th>Icon Css Class</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (_amenities.Length == 0)
                    {
                        <tr>
                            <th colspan="5">
                                <h4 class="text-danger">No amenities yet. Create one from the left from</h4>
                            </th>
                        </tr>
                    }
                    @foreach (var a in _amenities)
                    {
                        <tr>
                            <td>@a.Id</td>
                            <td>
                                <i class="@a.Icon text-primary"></i>
                            </td>
                            <td>@a.Name</td>
                            <td>@a.Icon</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {

    [SupplyParameterFromForm]
    private Amenity Model { get; set; } = new();

    private bool _isSaving;
    private string? _error;

    private Amenity[] _amenities = [];
    protected override async Task OnInitializedAsync()
    {
        _amenities = await AmenitiesService.GetAmenitiesAsync();
    }

    private async Task SaveAmenityAsync()
    {
        _error = null;
        _isSaving = true;
        await Task.Delay(3000);
        MethodResult<Amenity> result = await AmenitiesService.SaveAmenityAsync(Model);
        if (result.IsSuccess)
        {
            Model = new();
            _amenities = [.. _amenities, result.Data];
        }
        else
        {
            _error = result.ErrorMessage ?? "Error in saving amenity.";
        }
        _isSaving = false;
    }
}
